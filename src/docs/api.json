{
  "openapi": "3.0.2",
  "info": {
    "title": "BahanbaKu RESTful API Documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost",
      "description": "BahanBaku RESTful API Server"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user in database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "user successfully created",
                  "results": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "409": {
            "description": "Conflict , Email has been registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "Email has already registered"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "User login to application",
        "description": "User login to application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              },
              "example": {
                "email": "testing@gmail.com",
                "password": "testing123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "user successfully login",
                  "results": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "description": "Wrong Username / Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": false,
                  "message": "wrong username / password"
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get user information",
        "description": "Get user information from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success get profile information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "userProfile": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "picture": {
                              "type": "string"
                            },
                            "origin": {
                              "type": "object",
                              "properties": {
                                "lat": {
                                  "type": "integer"
                                },
                                "lng": {
                                  "type": "integer"
                                }
                              }
                            },
                            "shipping": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "cost": {
                                    "type": "integer"
                                  },
                                  "distance": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "bookmarks": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success get user profile",
                  "results": {
                    "id": "eJXCDdzd",
                    "username": "testing",
                    "email": "testing@gmail.com",
                    "picture": "https://storage.googleapis.com/bahanbaku/profile/eJXCDdzd.png",
                    "origin": {
                      "lat": -9.424724,
                      "lng": 105.2290617
                    },
                    "shipping": [
                      {
                        "id": "gJDNQCOC",
                        "cost": 10000,
                        "distance": 5433
                      },
                      {
                        "id": "24SUZiRT",
                        "cost": 15000,
                        "distance": 9051
                      }
                    ],
                    "bookmarks": ["pQLi6pat", "8cLv0cul"]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "summary": "update user information",
        "description": "update user information in database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "new-password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              },
              "examples": {
                "update user information": {
                  "description": "",
                  "value": {
                    "username": "change username",
                    "email": "testing@gmail.com",
                    "password": "testing123",
                    "new-password": ""
                  }
                },
                "update password": {
                  "description": "",
                  "value": {
                    "username": "testing123",
                    "email": "testing@gmail.com",
                    "password": "testing123",
                    "new-password": "newpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "results": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update user",
                  "results": {
                    "id": "eJXCDdzd"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/user/update-location": {
      "put": {
        "summary": "Update user location",
        "description": "Update user information coordinate and store in database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "integer"
                      },
                      "lng": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "location": {
                  "lat": -9.424724,
                  "lng": 105.2290617
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update user's location and shipping cost",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update user location",
                  "results": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/user/upload-picture": {
      "post": {
        "summary": "Edit user profile image",
        "description": "Edit user profile image in database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "profileImage": {
                  "contentType": "image/png, image/jpg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update user profile picture",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update user profile picture",
                  "results": {
                    "id": "eJXCDdzd"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/user/delete/{id}": {
      "delete": {
        "summary": "Delete user (admin only) ",
        "description": "Delete user from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "User ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "user 1": {
                "value": "eJXCDdzd"
              },
              "user 2": {
                "value": "d7hdyZ0B"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete user based on ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success delete user",
                  "results": {
                    "id": "eJXCDdzd"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/user/bookmarks/{id}": {
      "post": {
        "summary": "Add user bookmark ",
        "description": "Add bookmark to user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Recipe ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "recipe 1": {
                "value": "eJXCDdzd"
              },
              "recipe 2": {
                "value": "d7hdyZ0B"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success add user bookmark",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success add bookmark",
                  "results": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      },
      "delete": {
        "summary": "Delete bookmark",
        "description": "Delete bookmark from user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Recipe ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "recipe 1": {
                "value": "eJXCDdzd"
              },
              "recipe 2": {
                "value": "d7hdyZ0B"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete bookmark from user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success delete bookmark",
                  "results": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/user/nearby-resto": {
      "get": {
        "summary": "Get nearby resto based on keyword",
        "description": "Get nearby resto based on keyword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "keyword",
            "description": "Food name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "pizza"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get nearby resto",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "resto": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "restaurantName": {
                                "type": "string"
                              },
                              "rating": {
                                "type": "integer"
                              },
                              "userRatingTotal": {
                                "type": "integer"
                              },
                              "location": {
                                "type": "object",
                                "properties": {
                                  "lat": {
                                    "type": "number"
                                  },
                                  "lng": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update supplier",
                  "results": {
                    "resto": [
                      {
                        "restaurantName": "Nasi Goreng Spesial Mas Kenthus",
                        "rating": 5,
                        "user_ratings_total": 12,
                        "location": {
                          "lat": -7.427965599999999,
                          "lng": 109.2690586
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng AB (Abu Bakar)",
                        "rating": 4.6,
                        "user_ratings_total": 5,
                        "location": {
                          "lat": -7.385585799999999,
                          "lng": 109.2237762
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng RW \"09\"",
                        "rating": 4.3,
                        "user_ratings_total": 15,
                        "location": {
                          "lat": -7.4166456,
                          "lng": 109.2409477
                        }
                      },
                      {
                        "restaurantName": "NASI GORENG PAK GATOT",
                        "rating": 4.6,
                        "user_ratings_total": 13,
                        "location": {
                          "lat": -7.4210985,
                          "lng": 109.2224129
                        }
                      },
                      {
                        "restaurantName": "Warung Nasi GORENG SELERA",
                        "rating": 4.6,
                        "user_ratings_total": 10,
                        "location": {
                          "lat": -7.4130718,
                          "lng": 109.2452783
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng Mbah Ndut",
                        "rating": 5,
                        "user_ratings_total": 3,
                        "location": {
                          "lat": -7.4202162,
                          "lng": 109.2566409
                        }
                      },
                      {
                        "restaurantName": "Nasi goreng mas wahyu",
                        "rating": 5,
                        "user_ratings_total": 1,
                        "location": {
                          "lat": -7.4132082,
                          "lng": 109.2700826
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng ONA SATRIA",
                        "rating": 4,
                        "user_ratings_total": 19,
                        "location": {
                          "lat": -7.428670899999999,
                          "lng": 109.2699799
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng \"Hasan\"",
                        "rating": 4.6,
                        "user_ratings_total": 14,
                        "location": {
                          "lat": -7.4232665,
                          "lng": 109.2479597
                        }
                      },
                      {
                        "restaurantName": "Nasi goreng Jhon",
                        "rating": 4.8,
                        "user_ratings_total": 12,
                        "location": {
                          "lat": -7.4075223,
                          "lng": 109.2317571
                        }
                      },
                      {
                        "restaurantName": "Nasi Goreng Mas Alex",
                        "rating": 4.2,
                        "user_ratings_total": 237,
                        "location": {
                          "lat": -7.4111628,
                          "lng": 109.2454567
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/recipe": {
      "get": {
        "summary": "Get recipes",
        "description": "Get all recipes by default",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "description": "Food name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "featured",
            "description": "Value 1 or 0",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "new",
            "description": "Value 1 or 0",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get recipe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "servings": {
                                "type": "integer"
                              },
                              "times": {
                                "type": "integer"
                              },
                              "image": {
                                "type": "string",
                                "format": "url"
                              },
                              "description": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "message": "success get recipes",
                    "results": {
                      "recipes": [
                        {
                          "id": "pQLi6pat",
                          "title": "nasi goreng jawa",
                          "servings": 3,
                          "times": 45,
                          "ingredients": [
                            "1600 g nasi putih",
                            "2 butir telur, kocok lepas",
                            "1 buah daging paha ayam atas bawah, potong agak tipis",
                            "6 buah bakso sapi, iris",
                            "5 lembar kol, buang tulang, iris kasar",
                            "6 batang caisim, potong 3 cm",
                            "2 sdm Bango Kecap Manis",
                            "1 bungkus Royco Bumbu Komplit Nasi Goreng",
                            "1 sdt garam",
                            "\u215b sdt merica putih bubuk",
                            "2 batang daun bawang, iris miring",
                            "2 sdm minyak, untuk menumis",
                            "3 siung bawang putih, goreng",
                            "4 butir kemiri, goreng",
                            "6 butir bawang merah",
                            "3 buah cabai merah besar",
                            "5 butir ebi"
                          ],
                          "steps": [
                            "1 Panaskan minyak. Tumis bumbu halus sampai harum. Tambahkan telur di tengah wajan. Aduk sampai berbutir.",
                            "2 Masukkan ayam, aduk hingga matang. Masukkan bakso sapi, aduk sebentar. Tambahkan kol dan caisim. Aduk sampai setengah layu.",
                            "3 Masukkan nasi. Aduk-aduk. Tambahkan\u00a0Bango Kecap Manis, Royco Bumbu Komplit Nasi Goreng, garam, dan merica. Aduk sampai matang.",
                            "4 Masukkan daun bawang. Aduk rata. Sajikan."
                          ],
                          "description": "Resep nasi goreng Jawa merupakan salah satu menu makanan rumahan yang jadi andalan di kala para ratu dapur sedang tak punya waktu memasak atau tak punya bahan masakan di kulkas Bahan-bahannya yang sederhana dan hampir selalu ada di setiap rumah membuat resep nasi goreng ini sangat mudah diaplikasikan kapan saja",
                          "author": "Dilla",
                          "image": "https://storage.googleapis.com/bahanbaku/recipe/pQLi6pat.png",
                          "tags": ["Nasi Goreng"]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/recipe/{id}": {
      "get": {
        "summary": "Get recipe by ID",
        "description": "Get recipe information by ID from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Recipe ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "recipe 1": {
                "value": "pQLi6pat"
              },
              "recipe 2": {
                "value": "8cLv0cul"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get recipe by specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "recipe": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "servings": {
                              "type": "integer"
                            },
                            "times": {
                              "type": "integer"
                            },
                            "image": {
                              "type": "string",
                              "format": "url"
                            },
                            "description": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "success": true,
                    "message": "success get recipe",
                    "results": {
                      "recipe": {
                        "id": "pQLi6pat",
                        "title": "nasi goreng jawa",
                        "servings": 3,
                        "times": 45,
                        "ingredients": [
                          "1600 g nasi putih",
                          "2 butir telur, kocok lepas",
                          "1 buah daging paha ayam atas bawah, potong agak tipis",
                          "6 buah bakso sapi, iris",
                          "5 lembar kol, buang tulang, iris kasar",
                          "6 batang caisim, potong 3 cm",
                          "2 sdm Bango Kecap Manis",
                          "1 bungkus Royco Bumbu Komplit Nasi Goreng",
                          "1 sdt garam",
                          "\u215b sdt merica putih bubuk",
                          "2 batang daun bawang, iris miring",
                          "2 sdm minyak, untuk menumis",
                          "3 siung bawang putih, goreng",
                          "4 butir kemiri, goreng",
                          "6 butir bawang merah",
                          "3 buah cabai merah besar",
                          "5 butir ebi"
                        ],
                        "steps": [
                          "1 Panaskan minyak. Tumis bumbu halus sampai harum. Tambahkan telur di tengah wajan. Aduk sampai berbutir.",
                          "2 Masukkan ayam, aduk hingga matang. Masukkan bakso sapi, aduk sebentar. Tambahkan kol dan caisim. Aduk sampai setengah layu.",
                          "3 Masukkan nasi. Aduk-aduk. Tambahkan\u00a0Bango Kecap Manis, Royco Bumbu Komplit Nasi Goreng, garam, dan merica. Aduk sampai matang.",
                          "4 Masukkan daun bawang. Aduk rata. Sajikan."
                        ],
                        "description": "Resep nasi goreng Jawa merupakan salah satu menu makanan rumahan yang jadi andalan di kala para ratu dapur sedang tak punya waktu memasak atau tak punya bahan masakan di kulkas Bahan-bahannya yang sederhana dan hampir selalu ada di setiap rumah membuat resep nasi goreng ini sangat mudah diaplikasikan kapan saja",
                        "author": "Dilla",
                        "image": "https://storage.googleapis.com/bahanbaku/recipe/pQLi6pat.png",
                        "tags": ["Nasi Goreng"]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/recipe/create": {
      "post": {
        "summary": "Add recipe (admin only)",
        "description": "Add recipes to database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "servings": {
                    "type": "integer"
                  },
                  "times": {
                    "type": "integer"
                  },
                  "image": {
                    "type": "string",
                    "format": "url"
                  },
                  "description": {
                    "type": "string"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create recipe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success create recipe",
                  "results": {
                    "id": "pQLi6pat"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/recipe/update/{id}": {
      "put": {
        "summary": "Update a recipe (admin only)",
        "description": "Update a recipe information by ID to database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Recipe ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "recipe 1": {
                "value": "pQLi6pat"
              },
              "recipe 2": {
                "value": "8cLv0cul"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "servings": {
                    "type": "integer"
                  },
                  "times": {
                    "type": "integer"
                  },
                  "image": {
                    "type": "string",
                    "format": "url"
                  },
                  "description": {
                    "type": "string"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update recipe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update recipe",
                  "results": {
                    "id": "pQLi6pat"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/recipe/delete/{id}": {
      "delete": {
        "summary": "Delete recipe by ID (admin only)",
        "description": "Delete recipe information by ID from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Recipe ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "recipe 1": {
                "value": "pQLi6pat"
              },
              "recipe 2": {
                "value": "8cLv0cul"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete recipe by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success delete recipe",
                  "results": {
                    "id": "pQLi6pat"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "summary": "Get ingredients by name",
        "description": "Get ingredient information by name from supplier",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "description": "Ingredients name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "multi value": {
                "description": "Delimiter ',' , no space after ','",
                "value": "gula,garam,susu"
              },
              "single value": {
                "value": "minyak goreng"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "under": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "totalPrice": {
                                "type": "integer"
                              },
                              "missingProduct": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "suppliers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "supplierId": {
                                      "type": "string"
                                    },
                                    "shoppingCost": {
                                      "type": "integer"
                                    },
                                    "supplierName": {
                                      "type": "string"
                                    },
                                    "supplierContact": {
                                      "type": "string"
                                    },
                                    "products": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "productName": {
                                            "type": "string"
                                          },
                                          "productPrice": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "above": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "totalPrice": {
                                "type": "integer"
                              },
                              "missingProduct": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "suppliers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "supplierId": {
                                      "type": "string"
                                    },
                                    "shoppingCost": {
                                      "type": "integer"
                                    },
                                    "supplierName": {
                                      "type": "string"
                                    },
                                    "supplierContact": {
                                      "type": "string"
                                    },
                                    "products": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "productName": {
                                            "type": "string"
                                          },
                                          "productPrice": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": true,
                  "message": "success predict ingredients",
                  "results": {
                    "under": [
                      {
                        "suppliers": [
                          {
                            "supplierId": "Ap5xgtVlAGoc",
                            "shippingCost": 9000,
                            "supplierName": "Udin Shop",
                            "supplierContact": "081234567890",                            
                            "products": [
                              {
                                "productName": "Alini Gula Halus 500gr",
                                "productPrice": 20000
                              }
                            ]
                          }
                        ],
                        "missingProduct": ["babi"],
                        "totalPrice": 29000
                      }
                    ],
                    "above": [
                      {
                        "suppliers": [
                          {
                            "supplierId": "cRw3knppcqSt",
                            "shippingCost": 41060,
                            "supplierName": "Irvan Shop",
                            "supplierContact": "081234567890",                            
                            "products": [
                              {
                                "productName": "Alini Gula Halus 500gr",
                                "productPrice": 20000
                              }
                            ]
                          }
                        ],
                        "missingProduct": ["babi"],
                        "totalPrice": 61060
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/supplier": {
      "get": {
        "summary": "Get all suppliers",
        "description": "Get all supplier information from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success get suppliers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "supplier": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "origin": {
                                "type": "object",
                                "properties": {
                                  "lat": {
                                    "type": "number"
                                  },
                                  "lng": {
                                    "type": "number"
                                  }
                                }
                              },
                              "address": {
                                "type": "string"
                              },
                              "addressObj": {
                                "type": "object",
                                "properties": {
                                  "subDistrict": {
                                    "type": "string"
                                  },
                                  "districts": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "province": {
                                    "type": "string"
                                  },
                                  "zipCode": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "product": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "price": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "contact": {
                                "type": "string",
                                "pattern": "^08[0-9]{10,11}$"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success get suppliers",
                  "results": {
                    "suppliers": [
                      {
                        "id": "gJDNQCOC",
                        "name": "Warung Toni",
                        "origin": {
                          "lat": -7.424724,
                          "lng": 109.2290617
                        },
                        "address": "Jl. Graha Timur 5, Purwokerto Wetan, Kec. Purwokerto Tim., Kabupaten Banyumas, Jawa Tengah",
                        "addressObj": {
                          "subDistrict": "Purwokerto Wetan",
                          "district": "Purwokerto Timur",
                          "city": "Banyumas",
                          "province": "Jawa Tengah",
                          "zipCode": "53111"
                        },
                        "product": [
                          {
                            "name": "Frisian Flag susu UHT 900ml",
                            "price": 13900
                          },
                          {
                            "name": "Alini Gula Halus 500gr",
                            "price": 20000
                          },
                          {
                            "name": "Telur 1kg",
                            "price": 13000
                          },
                          {
                            "name": "DOLPIN Garam Dapur 500gr",
                            "price": 10500
                          },
                          {
                            "name": "Beras Ramos 1kg",
                            "price": 14000
                          },
                          {
                            "name": "Bawang putih 1kg",
                            "price": 32000
                          },
                          {
                            "name": "Bawang merah 1kg",
                            "price": 37000
                          },
                          {
                            "name": "Santan sasa 65ml",
                            "price": 3500
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/supplier/{id}": {
      "get": {
        "summary": "Get supplier by ID",
        "description": "Get supplier information by ID from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Supplier ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "examples": {
              "supplier 1": {
                "value": "gJDNQCOC"
              },
              "supplier 2": {
                "value": "24SUZiRT"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success get supplier by Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "origin": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "address": {
                          "type": "string"
                        },
                        "addressObj": {
                          "type": "object",
                          "properties": {
                            "subDistrict": {
                              "type": "string"
                            },
                            "districts": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "province": {
                              "type": "string"
                            },
                            "zipCode": {
                              "type": "integer"
                            }
                          }
                        },
                        "product": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "price": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "contact": {
                          "type": "string",
                          "pattern": "^08[0-9]{10,11}$"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "success get supplier by Id",
                  "results": {
                    "supplier": {
                      "name": "Warung Toni",
                      "origin": {
                        "lat": -7.424724,
                        "lng": 109.2290617
                      },
                      "address": "Jl. Graha Timur 5, Purwokerto Wetan, Kec. Purwokerto Tim., Kabupaten Banyumas, Jawa Tengah",
                      "addressObj": {
                        "subDistrict": "Purwokerto Wetan",
                        "district": "Purwokerto Timur",
                        "city": "Banyumas",
                        "province": "Jawa Tengah",
                        "zipCode": "53111"
                      },
                      "product": [
                        {
                          "name": "Frisian Flag susu UHT 900ml",
                          "price": 13900
                        },
                        {
                          "name": "Alini Gula Halus 500gr",
                          "price": 20000
                        },
                        {
                          "name": "Telur 1kg",
                          "price": 13000
                        },
                        {
                          "name": "DOLPIN Garam Dapur 500gr",
                          "price": 10500
                        },
                        {
                          "name": "Beras Ramos 1kg",
                          "price": 14000
                        },
                        {
                          "name": "Bawang putih 1kg",
                          "price": 32000
                        },
                        {
                          "name": "Bawang merah 1kg",
                          "price": 37000
                        },
                        {
                          "name": "Santan sasa 65ml",
                          "price": 3500
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/supplier/create": {
      "post": {
        "summary": "Create supplier (admin only)",
        "description": "Create supplier to database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  },
                  "message": {
                    "type": "string"
                  },
                  "results": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "origin": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        }
                      },
                      "address": {
                        "type": "string"
                      },
                      "address-obj": {
                        "type": "object",
                        "properties": {
                          "ward": {
                            "type": "string"
                          },
                          "districts": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "province": {
                            "type": "string"
                          },
                          "zip-code": {
                            "type": "integer"
                          }
                        }
                      },
                      "product": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "contact": {
                        "type": "string",
                        "pattern": "^08[0-9]{10,11}$"
                      }
                    }
                  }
                }
              },
              "example": {
                "name": "Warung Toni",
                "origin": [-7.424724, 109.2290617],
                "address": "Jl. Graha Timur 5, Purwokerto Wetan, Kec. Purwokerto Tim., Kabupaten Banyumas, Jawa Tengah",
                "address-obj": {
                  "sub-district": "Purwokerto Wetan",
                  "district": "Purwokerto Timur",
                  "city": "Banyumas",
                  "province": "Jawa Tengah",
                  "zip-code": "53111"
                },
                "product": [
                  {
                    "name": "Frisian Flag susu UHT 900ml",
                    "price": 13900
                  },
                  {
                    "name": "Alini Gula Halus 500gr",
                    "price": 20000
                  },
                  {
                    "name": "Telur 1kg",
                    "price": 13000
                  },
                  {
                    "name": "DOLPIN Garam Dapur 500gr",
                    "price": 10500
                  },
                  {
                    "name": "Beras Ramos 1kg",
                    "price": 14000
                  },
                  {
                    "name": "Bawang putih 1kg",
                    "price": 32000
                  },
                  {
                    "name": "Bawang merah 1kg",
                    "price": 37000
                  },
                  {
                    "name": "Santan sasa 65ml",
                    "price": 3500
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create supplier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success create supplier",
                  "results": {
                    "id": "gJDNQCOC"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/supplier/update/{id}": {
      "put": {
        "summary": "update Supplier by ID (admin only)",
        "description": "update Supplier by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean"
                  },
                  "message": {
                    "type": "string"
                  },
                  "results": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "origin": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "float"
                        }
                      },
                      "address": {
                        "type": "string"
                      },
                      "address-obj": {
                        "type": "object",
                        "properties": {
                          "ward": {
                            "type": "string"
                          },
                          "districts": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "province": {
                            "type": "string"
                          },
                          "zip-code": {
                            "type": "integer"
                          }
                        }
                      },
                      "product": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "contact": {
                        "type": "string",
                        "pattern": "^08[0-9]{10,11}$"
                      }
                    }
                  }
                }
              },
              "example": {
                "name": "Warung Toni",
                "origin": [-7.424724, 109.2290617],
                "address": "Jl. Graha Timur 5, Purwokerto Wetan, Kec. Purwokerto Tim., Kabupaten Banyumas, Jawa Tengah",
                "address-obj": {
                  "sub-district": "Purwokerto Wetan",
                  "district": "Purwokerto Timur",
                  "city": "Banyumas",
                  "province": "Jawa Tengah",
                  "zip-code": "53111"
                },
                "product": [
                  {
                    "name": "Frisian Flag susu UHT 900ml",
                    "price": 15000
                  },
                  {
                    "name": "Alini Gula Halus 500gr",
                    "price": 20000
                  },
                  {
                    "name": "Telur 1kg",
                    "price": 13000
                  },
                  {
                    "name": "DOLPIN Garam Dapur 500gr",
                    "price": 10500
                  },
                  {
                    "name": "Beras Ramos 1kg",
                    "price": 14000
                  },
                  {
                    "name": "Bawang putih 1kg",
                    "price": 32000
                  },
                  {
                    "name": "Bawang merah 1kg",
                    "price": 37000
                  },
                  {
                    "name": "Santan sasa 65ml",
                    "price": 3500
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success edit supplier by Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success update supplier",
                  "results": {
                    "id": "gJDNQCOC"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Bad-Request"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    },
    "/supplier/delete/{id}": {
      "delete": {
        "summary": "Delete supplier by ID (admin only)",
        "description": "Delete supplier information by ID from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "description": "Random 8 character and number",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9]{8}"
            },
            "examples": {
              "supplier1": {
                "description": "Example ID",
                "value": "gJDNQCOC"
              },
              "supplier2": {
                "description": "Example ID",
                "value": "24SUZiRT"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete supplier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "success delete supplier",
                  "results": {
                    "id": "gJDNQCOC"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "i": {
        "in": "path",
        "name": "ID",
        "description": "Random 8 character and number",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9]{8}"
        },
        "examples": {
          "user1": {
            "description": "Example ID",
            "value": "eJXCDdzd"
          },
          "user2": {
            "description": "Example ID",
            "value": "d7hdyZ0B"
          },
          "recipe1": {
            "description": "Example ID",
            "value": "pQLi6pat"
          },
          "recipe2": {
            "description": "Example ID",
            "value": "8cLv0cul"
          },
          "supplier1": {
            "description": "Example ID",
            "value": "gJDNQCOC"
          },
          "supplier2": {
            "description": "Example ID",
            "value": "24SUZiRT"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Bearer Token Invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "example": {
              "success": false,
              "message": "401 Invalid Access Token"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Token Valid but not admin",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "example": {
              "success": false,
              "message": "You is not an admin"
            }
          }
        }
      },
      "Bad-Request": {
        "description": "Invalid Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "example": {
              "success": false,
              "message": "400 Bad Request"
            }
          }
        }
      },
      "Not-Found": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "example": {
              "success": false,
              "message": "404 Resource Not Found"
            }
          }
        }
      }
    }
  }
}
